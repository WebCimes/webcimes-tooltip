{"version":3,"file":"js/webcimes-tooltip.udm.js","mappings":"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","sources":["webpack://webcimes-tooltip/webpack/universalModuleDefinition","webpack://webcimes-tooltip/webpack/bootstrap","webpack://webcimes-tooltip/webpack/runtime/define property getters","webpack://webcimes-tooltip/webpack/runtime/hasOwnProperty shorthand","webpack://webcimes-tooltip/webpack/runtime/make namespace object","webpack://webcimes-tooltip/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://webcimes-tooltip/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://webcimes-tooltip/./node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","webpack://webcimes-tooltip/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://webcimes-tooltip/./src/ts/webcimes-tooltip.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","/**\r\n * Copyright (c) 2023 WebCimes - RICHARD Florian (https://webcimes.com)\r\n * MIT License - https://choosealicense.com/licenses/mit/\r\n * Date: 2023-03-25\r\n */\r\n\r\n// Floating ui\r\nimport { computePosition, autoUpdate, Placement, offset, flip, shift, limitShift, arrow } from '@floating-ui/dom';\r\n\r\n/**\r\n * Global\r\n */\r\ndeclare global {\r\n\t/** Events */\r\n\tinterface GlobalEventHandlersEventMap {\r\n\t\tbeforeShow: CustomEvent;\r\n\t\tafterShow: CustomEvent;\r\n\t\tbeforeHide: CustomEvent;\r\n\t\tafterHide: CustomEvent;\r\n\t}\r\n}\r\n\r\n/**\r\n * Options\r\n */\r\ninterface Options {\r\n\t/** Type (button tooltip or title tooltip), default \"button\" */\r\n\ttype: \"button\" | \"title\";\r\n\t/** Element (selector string or HTMLElement) */\r\n\telement: string | HTMLElement | null;\r\n\t/** set a specific id on the tooltip. default \"null\" */\r\n\tsetId: string | null;\r\n\t/** set a specific class on the tooltip, default \"null\" */\r\n\tsetClass: string | null;\r\n\t/** Choose tooltip placement, default \"bottom\" for type \"button\" and \"top\" for type \"title\" */\r\n\tplacement: Placement;\r\n\t/** Delay before show the tooltip, default 0 for type \"button\" and 400 for type \"title\" */\r\n\tdelay: number;\r\n\t/** Duration of animation for show the tooltip, default 600 */\r\n\tduration: number;\r\n\t/** Generate an arrow for the tooltip, default true */\r\n\tarrow: boolean;\r\n\t/** add extra css style to tooltip, default null */\r\n\tstyle: string | null;\r\n\t/** Hide the tooltip when the mouse hover the tooltip (only for type \"title\"), default true */\r\n\thideOnHover: boolean;\r\n\t/** callback before show tooltip */\r\n\tbeforeShow(): void;\r\n\t/** callback after show tooltip */\r\n\tafterShow(): void;\r\n\t/** callback before destroy tooltip */\r\n\tbeforeHide(): void;\r\n\t/** callback after destroy tooltip */\r\n\tafterHide(): void;\r\n}\r\n\r\n/**\r\n * ThisTooltip\r\n */\r\ninterface ThisTooltip extends HTMLElement {\r\n\t/** tooltip show timeout */\r\n\ttooltipShowTimeout?: NodeJS.Timeout;\r\n\t/** tooltip hide timeout */\r\n\ttooltipHideTimeout?: NodeJS.Timeout;\r\n\t/** tooltip delay */\r\n\ttooltipDelay?: number;\r\n\t/** tooltip duration */\r\n\ttooltipDuration?: number;\r\n\t/** tooltip already show */\r\n\ttooltipAlreadyShow?: boolean;\r\n\t/** tooltip placement */\r\n\ttooltipPlacement?: Placement;\r\n\t/** tooltip arrow */\r\n\ttooltipArrow?: boolean;\r\n\t/** tooltip hide on hover */\r\n\ttooltipHideOnHover?: boolean;\r\n\t/** cleanUp floating ui */\r\n\tcleanUpFloatingUi?: () => void;\r\n}\r\n// type ThisTooltipOrNull = ThisTooltip | null;\r\n\r\n/**\r\n * Class WebcimesTooltip\r\n */\r\nexport class WebcimesTooltip\r\n{\r\n\t/** Get the dom element of the tooltip ref */\r\n\tpublic tooltipRef: HTMLElement | null;\r\n\r\n\t/** Get the dom element of the tooltip */\r\n\tpublic tooltip: ThisTooltip;\r\n\t\r\n\t/** Get the dom element of the tooltip arrow */\r\n\tpublic tooltipArrow: HTMLElement | null;\r\n\r\n\t/** Options of the current tooltip */\r\n\tprivate options: Options;\r\n\r\n\t/**\r\n\t * Create tooltip\r\n\t */\r\n\tconstructor(options: Partial<Options>)\r\n\t{\r\n\t\t// Defaults\r\n\t\tconst defaults: Options = {\r\n\t\t\ttype: \"button\",\r\n\t\t\telement: null,\r\n\t\t\tsetId: null,\r\n\t\t\tsetClass: null,\r\n\t\t\tplacement: (options.type && options.type==\"title\" ? \"top\" : \"bottom\"),\r\n\t\t\tdelay: (options.type && options.type==\"title\" ? 400 : 0),\r\n\t\t\tduration: 600,\r\n\t\t\tarrow: true,\r\n\t\t\tstyle: null,\r\n\t\t\thideOnHover: true,\r\n\t\t\tbeforeShow: () => {},\r\n\t\t\tafterShow: () => {},\r\n\t\t\tbeforeHide: () => {},\r\n\t\t\tafterHide: () => {},\r\n\t\t}\r\n\t\tthis.options = {...defaults, ...options};\r\n\r\n\t\t// Bind \"this\" to all events\r\n\t\tthis.onTransitionEndOnShow = this.onTransitionEndOnShow.bind(this);\r\n\t\t\r\n\t\t// Call init method\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert elements entry to an array of HTMLElement\r\n\t */\r\n\tprivate getHtmlElements(element: string | HTMLElement | NodeList | null)\r\n\t{\r\n\t\t// Convert options.element to an array of HTMLElement\r\n\t\tlet htmlElements: HTMLElement[] = [];\r\n\t\tif(element instanceof NodeList)\r\n\t\t{\r\n\t\t\thtmlElements = [...Array.from(element) as HTMLElement[]];\r\n\t\t}\r\n\t\tif(element instanceof HTMLElement)\r\n\t\t{\r\n\t\t\thtmlElements = [...[element]];\r\n\t\t}\r\n\t\tif(typeof element === \"string\")\r\n\t\t{\r\n\t\t\thtmlElements = [...Array.from(document.querySelectorAll(element)) as HTMLElement[]];\r\n\t\t}\r\n\t\treturn htmlElements;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert element entry to an HTMLElement\r\n\t */\r\n\tprivate getHtmlElement(element: string | HTMLElement | null)\r\n\t{\r\n\t\t// Convert options.element to an array of HTMLElement\r\n\t\tlet htmlElement: HTMLElement | null = null;\r\n\t\tif(element instanceof HTMLElement)\r\n\t\t{\r\n\t\t\thtmlElement = element;\r\n\t\t}\r\n\t\tif(typeof element === \"string\")\r\n\t\t{\r\n\t\t\thtmlElement = document.querySelector(element) as HTMLElement | null;\r\n\t\t}\r\n\t\treturn htmlElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a unique ID, related to the prefix\r\n\t */\r\n\tprivate getUniqueID(prefix: string)\r\n\t{\r\n\t\tdo\r\n\t\t{\r\n\t\t\tprefix += Math.floor(Math.random()*10000);\r\n\t\t} while (document.querySelector(\"[data-tooltip-target='\"+prefix+\"']\"));\r\n\t\t\r\n\t\treturn prefix;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialization of the current tooltip\r\n\t */\r\n    private init()\r\n\t{\r\n\t\t// Define tooltipRef\r\n\t\tthis.tooltipRef = this.getHtmlElement(this.options.element);\r\n\r\n\t\t// Add class webcimes-tooltip-ref\r\n\t\tthis.tooltipRef?.classList.add(\"webcimes-tooltip-ref\");\r\n\r\n\t\t// Init type button\r\n\t\tif(this.options.type == \"button\")\r\n\t\t{\r\n\t\t\tthis.tooltipForButton();\r\n\t\t}\r\n\t\t// Init type title\r\n\t\telse if(this.options.type == \"title\")\r\n\t\t{\r\n\t\t\tthis.tooltipForTitle();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Show the tooltip\r\n\t */\r\n\tpublic show()\r\n\t{\r\n\t\tif(this.tooltipRef && this.tooltip)\r\n\t\t{\r\n\t\t\t// If the tooltip doesn't already exist then add a new one on the dom\r\n\t\t\tif(!document.querySelector(`.webcimes-tooltip[data-ref=\"${this.tooltipRef!.getAttribute(\"data-tooltip-target\")}\"]`))\r\n\t\t\t{\r\n\t\t\t\tdocument.body.insertAdjacentHTML(\"beforeend\", this.tooltip!.outerHTML);\r\n\t\t\t\tthis.tooltip = document.body.lastElementChild as ThisTooltip;\r\n\t\t\t}\r\n\r\n\t\t\t// Init the tooltip with the options\r\n\t\t\tthis.tooltip.tooltipPlacement = (this.tooltipRef.getAttribute('data-tooltip-placement') || this.options.placement) as Placement;\r\n\t\t\tthis.tooltip.tooltipDelay = (this.tooltipRef.getAttribute('data-tooltip-delay') || this.options.delay) as number;\r\n\t\t\tthis.tooltip.tooltipDuration = (this.tooltipRef.getAttribute('data-tooltip-duration') || this.options.duration) as number;\r\n\t\t\tthis.tooltip.tooltipArrow = (JSON.parse((this.tooltipRef.getAttribute('data-tooltip-arrow') || this.options.arrow) as string)) as boolean;\r\n\t\t\tthis.tooltip.tooltipHideOnHover = (JSON.parse((this.tooltipRef.getAttribute('data-tooltip-hide-on-hover') || this.options.hideOnHover) as string)) as boolean;\r\n\t\t\tthis.tooltip.style.setProperty(\"--tooltip-duration\", this.tooltip.tooltipDuration+\"ms\");\r\n\t\t\tif(this.tooltip.tooltipArrow)\r\n\t\t\t{\r\n\t\t\t\tif(!this.tooltip.querySelector(\".webcimes-tooltip__arrow\"))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.tooltip.insertAdjacentHTML(\"beforeend\", '<div class=\"webcimes-tooltip__arrow\"></div>');\r\n\t\t\t\t}\r\n\t\t\t\tthis.tooltipArrow = this.tooltip.querySelector(\".webcimes-tooltip__arrow\");\r\n\t\t\t}\r\n\r\n\t\t\t// Clear tooltipHideTimeout\r\n\t\t\tclearTimeout(this.tooltip.tooltipHideTimeout);\r\n\r\n\t\t\t// Create tooltipShowtimeout\r\n\t\t\tthis.tooltip.tooltipShowTimeout = setTimeout(() => {\r\n\t\t\t\t// Callback before show tooltip (set a timeout of zero, to wait for some dom to load)\r\n\t\t\t\tif(!this.tooltip.tooltipAlreadyShow)\r\n\t\t\t\t{\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.tooltipRef!.dispatchEvent(new CustomEvent(\"beforeShow\"));\r\n\t\t\t\t\t\tthis.tooltip.dispatchEvent(new CustomEvent(\"beforeShow\"));\r\n\t\t\t\t\t\tif(typeof this.options.beforeShow === 'function')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.options.beforeShow();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show the tooltip\r\n\t\t\t\tthis.tooltip!.classList.add('webcimes-tooltip--show');\r\n\r\n\t\t\t\t// Set that the tooltip as already show one time\r\n\t\t\t\tthis.tooltip!.tooltipAlreadyShow = true;\r\n\r\n\t\t\t}, (this.tooltip.tooltipAlreadyShow?0:this.tooltip.tooltipDelay));\r\n\r\n\t\t\t// Callback after show tooltip\r\n\t\t\tthis.tooltip.addEventListener(\"transitionend\", this.onTransitionEndOnShow);\r\n\r\n\t\t\t// Create floatingUi on the tooltip if doesn't exist\r\n\t\t\tif(typeof this.tooltip.cleanUpFloatingUi === \"undefined\")\r\n\t\t\t{\r\n\t\t\t\tlet options = \r\n\t\t\t\t{\r\n\t\t\t\t\tplacement: this.tooltip.tooltipPlacement,\r\n\t\t\t\t\tmiddleware: [\r\n\t\t\t\t\t\toffset(10), // offset between tooltip ref and tooltip\r\n\t\t\t\t\t\tshift({ // shift before flip for prevent wrong final placement\r\n\t\t\t\t\t\t\tpadding: 10, // padding between tooltip and viewport\r\n\t\t\t\t\t\t\tlimiter: limitShift({ // prevent detachtment from tooltipRef\r\n    \t\t\t\t\t\t\toffset: 30, // Start limiting 30px earlier\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tflip({ // Automatically flip the tooltip on scroll or resize\r\n\t\t\t\t\t\t\tfallbackPlacements: ['top', 'bottom', 'left', 'right'],\r\n\t\t\t\t\t\t\tpadding: 10, // padding between tooltip and edge of the boundary before flip\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t],\r\n\t\t\t\t};\r\n\t\t\t\tif(this.tooltipArrow)\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.middleware.push(arrow({\r\n\t\t\t\t\t\telement: this.tooltipArrow!,\r\n\t\t\t\t\t\tpadding: 10, // padding arrow from the edges of the tooltip\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.tooltip.cleanUpFloatingUi = autoUpdate(this.tooltipRef, this.tooltip, () => {\r\n\t\t\t\t\tcomputePosition(this.tooltipRef!, this.tooltip, options).then(({x, y, middlewareData, placement}) => {\r\n\t\t\t\t\t\tthis.tooltip.setAttribute(\"data-tooltip-placement\", placement);\r\n\t\t\t\t\t\tObject.assign(this.tooltip.style, {\r\n\t\t\t\t\t\t\tleft: `${x}px`,\r\n\t\t\t\t\t\t\ttop: `${y}px`,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(this.tooltipArrow && middlewareData.arrow)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst arrowLen = this.tooltipArrow.offsetWidth;\r\n\t\t\t\t\t\t\tconst side = placement.split(\"-\")[0];\r\n\t\t\t\t\t\t\tconst staticSide = {\r\n\t\t\t\t\t\t\t\ttop: \"bottom\",\r\n\t\t\t\t\t\t\t\tright: \"left\",\r\n\t\t\t\t\t\t\t\tbottom: \"top\",\r\n\t\t\t\t\t\t\t\tleft: \"right\"\r\n\t\t\t\t\t\t\t}[side]!;\r\n\t\t\t\t\t\t\tconst { x, y } = middlewareData.arrow;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tObject.assign(this.tooltipArrow.style, {\r\n\t\t\t\t\t\t\t\tleft: x != null ? `${x}px` : \"\",\r\n\t\t\t\t\t\t\t\ttop: y != null ? `${y}px` : \"\",\r\n\t\t\t\t\t\t\t\tright: \"\",\r\n\t\t\t\t\t\t\t\tbottom: \"\",\r\n\t\t\t\t\t\t\t\t[staticSide]: `${-arrowLen / 2}px`,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the tooltip\r\n\t */\r\n\tpublic hide(callback?: () => void)\r\n\t{\r\n\t\tif(this.tooltip)\r\n\t\t{\r\n\t\t\t// Callback before hide tooltip\r\n\t\t\tthis.tooltipRef!.dispatchEvent(new CustomEvent(\"beforeHide\"));\r\n\t\t\tthis.tooltip.dispatchEvent(new CustomEvent(\"beforeHide\"));\r\n\t\t\tif(typeof this.options.beforeHide === 'function')\r\n\t\t\t{\r\n\t\t\t\tthis.options.beforeHide();\r\n\t\t\t}\r\n\r\n\t\t\t// Clear tooltipShowTimeout\r\n\t\t\tclearTimeout(this.tooltip.tooltipShowTimeout);\r\n\r\n\t\t\t// Hide the tooltip\r\n\t\t\tthis.tooltip.classList.remove('webcimes-tooltip--show');\r\n\t\t\t\r\n\t\t\t// Destroy all events\r\n\t\t\tthis.tooltip.removeEventListener(\"transitionend\", this.onTransitionEndOnShow);\r\n\r\n\t\t\t// Create tooltipHideTimeout\r\n\t\t\tthis.tooltip.tooltipHideTimeout = setTimeout(() => {\r\n\r\n\t\t\t\t// Destroy floatingUi if exist\r\n\t\t\t\tif(typeof this.tooltip?.cleanUpFloatingUi !== \"undefined\")\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.tooltip.cleanUpFloatingUi();\r\n\t\t\t\t\tdelete this.tooltip.cleanUpFloatingUi;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Delete variables of the tooltip element\r\n\t\t\t\tdelete this.tooltip?.tooltipPlacement;\r\n\t\t\t\tdelete this.tooltip?.tooltipDelay;\r\n\t\t\t\tdelete this.tooltip?.tooltipDuration;\r\n\t\t\t\tdelete this.tooltip?.tooltipArrow;\r\n\t\t\t\tdelete this.tooltip?.tooltipHideOnHover;\r\n\t\t\t\tdelete this.tooltip?.tooltipAlreadyShow;\r\n\t\t\t\tdelete this.tooltip?.tooltipShowTimeout;\r\n\t\t\t\tdelete this.tooltip?.tooltipHideTimeout;\r\n\r\n\t\t\t\t// Callback after hide tooltip\r\n\t\t\t\tthis.tooltipRef!.dispatchEvent(new CustomEvent(\"afterHide\"));\r\n\t\t\t\tthis.tooltip.dispatchEvent(new CustomEvent(\"afterHide\"));\r\n\t\t\t\tif(typeof this.options.afterHide === 'function')\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.options.afterHide();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Callback\r\n\t\t\t\tif(typeof callback === 'function')\r\n\t\t\t\t{\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\r\n\t\t\t}, this.tooltip.tooltipDuration);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Create automatically tooltip for button\r\n\t */\r\n\tprivate tooltipForButton()\r\n\t{\r\n\t\tif(this.tooltipRef)\r\n\t\t{\r\n\t\t\t// Create tooltip element without adding it to the dom\r\n\t\t\tconst uniqueID = this.getUniqueID(\"tooltipButton\");\r\n\t\t\tthis.tooltipRef!.setAttribute(\"data-tooltip-target\", uniqueID);\r\n\t\t\tlet tooltip = document.createElement(\"template\");\r\n\t\t\ttooltip.innerHTML = `<div class=\"webcimes-tooltip webcimes-tooltip--button ${(this.options.setClass?this.options.setClass:``)}\" ${(this.options.setId?`id=\"${this.options.setId}\"`:``)} data-ref=\"${uniqueID}\" ${(this.options.style?`style=\"${this.options.style}\"`:``)}>${this.tooltipRef.nextElementSibling?.outerHTML}</div>`;\r\n\t\t\tthis.tooltip = tooltip.content.firstChild as HTMLElement;\r\n\r\n\t\t\t// Remove origin tooltip node\r\n\t\t\tthis.tooltipRef.nextElementSibling?.remove();\r\n\r\n\t\t\t// Tooltip button (show)\r\n\t\t\tthis.tooltipRef.addEventListener(\"click\", (e) => {\r\n\t\t\t\t// Show the tooltip\r\n\t\t\t\tthis.show();\r\n\t\t\t});\r\n\r\n\t\t\t// Tooltip click outside (hide)\r\n\t\t\tdocument.addEventListener(\"click\", (e) => {\r\n\t\t\t\tif((e.target as HTMLElement).closest(\".webcimes-tooltip-ref\") != this.tooltipRef && (e.target as HTMLElement).closest(\".webcimes-tooltip\") != this.tooltip)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Hide the tooltip\r\n\t\t\t\t\tthis.hide(() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Remove the tooltip\r\n\t\t\t\t\t\tthis.tooltip?.remove();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Create automatically tooltip for title\r\n\t */\r\n\tprivate tooltipForTitle()\r\n\t{\r\n\t\tif(this.tooltipRef)\r\n\t\t{\r\n\t\t\t// Create data-tooltip-title attribute, and remove title attribute\r\n\t\t\tthis.tooltipRef.setAttribute(\"data-tooltip-title\", this.tooltipRef.getAttribute(\"title\")!);\r\n\t\t\tthis.tooltipRef.removeAttribute(\"title\");\r\n\r\n\t\t\t// Create tooltip element without adding it to the dom\r\n\t\t\tconst uniqueID = this.getUniqueID(\"tooltipTitle\");\r\n\t\t\tthis.tooltipRef!.setAttribute(\"data-tooltip-target\", uniqueID);\r\n\t\t\tlet tooltip = document.createElement(\"template\");\r\n\t\t\ttooltip.innerHTML = `<div class=\"webcimes-tooltip webcimes-tooltip--title ${(this.options.setClass?this.options.setClass:``)}\" ${(this.options.setId?`id=\"${this.options.setId}\"`:``)} data-ref=\"${uniqueID}\" ${(this.options.style?`style=\"${this.options.style}\"`:``)}>${this.tooltipRef!.getAttribute(\"data-tooltip-title\")}</div>`;\r\n\t\t\tthis.tooltip = tooltip.content.firstChild as HTMLElement;\r\n\r\n\t\t\t// On mouseenter / click, create tooltip title\r\n\t\t\tdocument.addEventListener(\"mouseenter\", (e) => {\r\n\t\t\t\tif(e.target == this.tooltipRef || (!this.tooltip.tooltipHideOnHover && e.target == this.tooltip))\r\n\t\t\t\t{\r\n\t\t\t\t\t// Show the tooltip\r\n\t\t\t\t\tthis.show();\r\n\t\t\t\t}\r\n\t\t\t}, true);\r\n\r\n\t\t\t// On mouseleave, hide, remove and destroy tooltip title\r\n\t\t\tdocument.addEventListener(\"mouseleave\", (e) => {\r\n\t\t\t\tif(e.target == this.tooltipRef || (!this.tooltip.tooltipHideOnHover && e.target == this.tooltip))\r\n\t\t\t\t{\r\n\t\t\t\t\t// Hide the tooltip\r\n\t\t\t\t\tthis.hide(() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Remove the tooltip\r\n\t\t\t\t\t\tthis.tooltip?.remove();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Event tooltip opacity transition end on show class */\r\n\tprivate onTransitionEndOnShow(e: TransitionEvent)\r\n\t{\r\n\t\tif(this.tooltip.classList.contains(\"webcimes-tooltip--show\") && e.propertyName == \"opacity\")\r\n\t\t{\r\n\t\t\t// Callback after show tooltip\r\n\t\t\tthis.tooltipRef!.dispatchEvent(new CustomEvent(\"afterShow\"));\r\n\t\t\tthis.tooltip.dispatchEvent(new CustomEvent(\"afterShow\"));\r\n\t\t\tif(typeof this.options.afterShow === 'function')\r\n\t\t\t{\r\n\t\t\t\tthis.options.afterShow();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Math","min","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","param","placement","split","getOppositeAxis","axis","getAxisLength","includes","getAlignmentAxis","replace","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","flip","name","fn","_middlewareData$arrow","_middlewareData$flip","middlewareData","initialPlacement","mainAxis","checkMainAxis","crossAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","detectOverflowOptions","arrow","alignmentOffset","isBasePlacement","isRTL","oppositePlacement","getExpandedPlacements","push","direction","list","isStart","lr","rl","tb","bt","getSideList","map","concat","getOppositeAxisPlacements","placements","overflow","overflows","overflowsData","sides","length","mainAlignmentSide","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","data","reset","resetPlacement","filter","d","sort","b","_overflowsData$map$so","reduce","acc","offset","_middlewareData$offse","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","convertValueToCoords","shift","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","some","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","clippingAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getDimensions","getClientRects","Array","from","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","cleanup","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","e","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","prevRefRect","frameLoop","nextRefRect","removeEventListener","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","WebcimesTooltip","tooltipRef","tooltip","tooltipArrow","constructor","defaults","type","setId","setClass","delay","duration","style","hideOnHover","beforeShow","afterShow","beforeHide","afterHide","onTransitionEndOnShow","bind","init","getHtmlElements","htmlElements","NodeList","querySelectorAll","getHtmlElement","htmlElement","querySelector","getUniqueID","prefix","random","classList","add","tooltipForButton","tooltipForTitle","show","getAttribute","insertAdjacentHTML","outerHTML","lastElementChild","tooltipPlacement","tooltipDelay","tooltipDuration","JSON","parse","tooltipHideOnHover","setProperty","tooltipHideTimeout","tooltipShowTimeout","tooltipAlreadyShow","dispatchEvent","CustomEvent","cleanUpFloatingUi","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","then","setAttribute","assign","arrowLen","staticSide","hide","callback","remove","uniqueID","createElement","innerHTML","nextElementSibling","content","firstChild","closest","removeAttribute","contains","propertyName"],"sourceRoot":""}